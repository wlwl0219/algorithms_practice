// 새로 가입하는 유저들이 카카오 아이디 규칙에 맞지 않는
// 아이디를 입력했을 때, 입력된 아이디와 유사하면서 규칙에 맞는
// 아이디를 추천해주는 프로그램을 개발하는 것입니다.
// 아이디의 길이는 3자 이상 15자 이하여야 합니다.
// 아이디는 알파벳 소문자, 숫자, 빼기(-), 밑줄(_), 마침표(.) 문자만 사용할 수 있습니다.
// 단, 마침표(.)는 처음과 끝에 사용할 수 없으며 또한 연속으로 사용할 수 없습니다.

// 신규 유저가 입력한 아이디가 new_id 라고 한다면,
// 1단계 new_id의 모든 대문자를 대응되는 소문자로 치환합니다.
// 2단계 new_id에서 알파벳 소문자, 숫자, 빼기(-), 밑줄(_), 마침표(.)를 제외한 모든 문자를 제거합니다.
// 3단계 new_id에서 마침표(.)가 2번 이상 연속된 부분을 하나의 마침표(.)로 치환합니다.
// 4단계 new_id에서 마침표(.)가 처음이나 끝에 위치한다면 제거합니다.
// 5단계 new_id가 빈 문자열이라면, new_id에 "a"를 대입합니다.
// 6단계 new_id의 길이가 16자 이상이면, new_id의 첫 15개의 문자를 제외한 나머지 문자들을 모두 제거합니다.
// 만약 제거 후 마침표(.)가 new_id의 끝에 위치한다면 끝에 위치한 마침표(.) 문자를 제거합니다.
// 7단계 new_id의 길이가 2자 이하라면, new_id의 마지막 문자를 new_id의 길이가 3이 될 때까지 반복해서 끝에 붙입니다.

// Precautions
// new_id는 길이 1 이상 1,000 이하인 문자열입니다.
// new_id는 알파벳 대문자, 알파벳 소문자, 숫자, 특수문자로 구성되어 있습니다.
// new_id에 나타날 수 있는 특수문자는 -_.~!@#$%^&*()=+[{]}:?,<>/ 로 한정됩니다.

// solution 1
// 1단계를 위해 toLowerCase로 소문자로 변환한다.
// 2단계를 위해 소문자와 숫자 ._-특수문자가 아니면 replace를 이용해 ""로 바꾼다.
// 3단계를 위해 마침표가 2번이상 나오는 부분은 하나의 마침표로 바꾼다.
// 4단계를 위해 마침표가 처음이나 끝에 위치하면 제거한다.
// 5단계를 위해 빈 문자열이면 "a"를 대입한다.
// 6단계를 위해 15개의 문자열에서 끝에 마침표가 오면 제거한다.
// 7단계를 위해 길이가 2자 이하라면 길이가 3이 될 때까지 마지막 문자를 붙인다.
function solution(new_id) {
  let refer = new_id
    .toLowerCase()
    .replace(/[^\w\.\-]/g, '')
    .replace(/[\.]{2,}/g, '.')
    .replace(/^\./, '')
    .replace(/\.$/, '');

  if (!refer) {
    refer = 'a';
  }

  if (refer.length > 15) {
    return refer.slice(0, 15).replace(/\.$/, '');
  }

  if (refer.length < 3) {
    return refer + refer[refer.length - 1].repeat(3 - refer.length);
  }
  return refer;
}

function solution(new_id) {
  const refer = new_id
    .toLowerCase() // 1단계
    .replace(/[^\w\.\-]/g, '') // 2단계
    .replace(/\.+/g, '.') // 3단계
    .replace(/^\.|\.$/g, '') // 4단계
    .replace(/^$/, 'a') // 5단계
    .slice(0, 15)
    .replace(/\.$/, ''); // 6단계

  return refer.length > 2 ? refer : refer.padEnd(3, refer[refer.length - 1]); // 7단계
}
